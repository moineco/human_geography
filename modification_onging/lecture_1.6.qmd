# Population distribution of Tokyo

List of R packages used in this section:

```{r message=FALSE, warning=FALSE}
#| code-fold: false
library(sf)
library(tidyverse)
library(jpndistrict) # to get the base map of Japan's prefecture
library(ggthemes) # to use theme_map
library(rnaturalearth) # to use ne_countries
library(DT) # to produce data table
```

-   If you don't find `japandistrict`, use following:

install.packages("remotes") remotes::install_github("uribo/jpndistrict")

-   Alternatively, you can use the `pacman` package manager to load necessary R packages from below:

```{txt}
pacman::p_load(sf, tidyverse, jpndistrict, ggthemes, rnaturalearth)
```

-   Name the data world_map

```{r message=FALSE, warning=FALSE}
#| code-fold: false
global_map <- ne_countries(scale = "small", returnclass = "sf")
```

## Population Map of Tokyo

-   The prefecture code for Tokyo is 13. Now we can plot the map of the 23 wards of Tokyo

```{r message=FALSE, warning=FALSE}
#| code-fold: false
df_tokyo_sf <- jpn_pref(13, district = TRUE) %>% 
  dplyr::filter(str_detect(city, "åŒº")) 
```

-   Display the extracted map of Tokyo's 23 wards

```{r message=FALSE, warning=FALSE}
#| code-fold: false
df_tokyo_sf %>%
  ggplot() +
  geom_sf() +
  theme_minimal()
```

-   Check your data here

```{r message=FALSE, warning=FALSE}
#| code-fold: false
head(df_tokyo_sf, 23)
```

-   Import the .CSV data to make an interactive population map of Tokyo

```{r message=FALSE, warning=FALSE}
#| code-fold: false
df_tokyo_pop <- read_csv("data/csv/tokyo_pop.csv")
datatable(df_tokyo_pop)
```

-   Merge the spatial data with your population data

```{r message=FALSE, warning=FALSE}
#| code-fold: false
merge_tokyo <- df_tokyo_sf %>% 
  left_join(df_tokyo_pop, by = "city") %>% 
  st_as_sf()
```

-   Check the merged data

```{r message=FALSE, warning=FALSE}
#| code-fold: false
merge_tokyo %>% 
  head() %>% 
  rmarkdown::paged_table()
```

-   Plot your data with ggplot2

```{r message=FALSE, warning=FALSE}
#| code-fold: false
#| fig.cap: "Population of Tokyo, Japan"
#| fig.height: 4
map_pop_tokyo <- merge_tokyo %>% 
  ggplot() +
  geom_sf(aes(fill = population)) +
  scale_fill_distiller(name = "Population",
                       palette = "Greens", direction = 1) +
  theme_map(base_family = "HiraginoSans-W3") +
  theme(legend.position = c(.1, -.1),
        legend.direction = "horizontal",
        legend.title = element_text(size = 15), 
        legend.text = element_text(size = 15),
        legend.key.size = unit(1, "cm"),
        legend.key.width = unit(3,"cm")) +
  coord_sf(datum = NA) 

map_pop_tokyo
```

-   Plot your population data with the name of the cities in Tokyo

```{r message=FALSE, warning=FALSE}
#| code-fold: false
#| fig.cap: "Population of Tokyo, Japan"
#| fig.height: 4
map_pop_tokyo_text <- merge_tokyo %>% 
  mutate(
    text_x = map_dbl(geometry, ~st_centroid(.x)[[1]]),
    text_y = map_dbl(geometry, ~st_centroid(.x)[[2]])
  ) %>% 
  ggplot() +
  geom_sf(aes(fill = population)) +
  geom_label(aes(x = text_x, y = text_y, label = city), 
             size = 1.7, family = "HiraginoSans-W3") +
  scale_fill_distiller(name = "Population",
                       palette = "Greens", direction = 1) +
  theme_map(base_family = "HiraginoSans-W3") +
  theme(legend.position = c(.8, .05),
        legend.title = element_text(size = 10), 
        legend.text = element_text(size = 5),
        legend.key.size = unit(0.5, "cm"),
        legend.key.width = unit(1,"cm")) +
  coord_sf(datum = NA) 

map_pop_tokyo_text
```

-   To export the above figure, use the following code:

```{txt}
ggsave("fig/map_pop_tokyo_text.png", map_pop_tokyo_text, width = 13, height = 13)
```
